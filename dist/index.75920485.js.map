{"mappings":"oHAOeA,EAAAA,0BANAC,EAAQ,IACnBC,KAAKD,MAAQA,EACbC,KAAKC,MAAQ,+CCOFC,EAAAC,QAAA,wBARSC,EAAKC,KAAUC,GACrC,MAAO,KACLF,QACAC,YACAC,IAMFR,UAAAA,EAAAA,qICVF,MAAMS,EAAW,QACfC,YAoDOC,EAAmBC,EAAMX,GAC3BW,EAAKC,OACJD,EAAKE,mBACPF,EAAKE,qBACIF,EAAKG,2BACdH,EAAKG,6BAIId,EAARA,MAAQA,WAnCWW,GAExB,IAAIC,EAGEG,MAAAA,EAAWJ,EAAKF,SAEtBO,QAAQC,IAAIF,GAGZH,EAAOM,EAAQH,GAEXJ,EAAKC,MACHD,EAAKQ,qBACPR,EAAKQ,sBAEHR,EAAKS,oBACPT,EAAKS,sBAEET,EAAKU,mBACdV,EAAKU,oBAGPV,EAAKC,KAAOA,EAcZU,CAAgBX,YAGTO,EAASK,GAEhB,GADIA,MAAAA,GAA0D,kBAAVA,IAAqBA,EAAQ,IAC5D,iBAAVA,EACT,OAAOC,SAASC,eAAeF,GAKhBlB,GAAQ,mBAAdkB,EAAMlB,IAAoB,CAE7BM,MAAAA,WAvEgBA,EAAMX,GAC9B,IAAI0B,EAgBJ,OAdIf,EAAKgB,WAAahB,EAAKgB,UAAUlB,QACnCO,QAAQC,IAAI,QAASjB,GACrB0B,EAAO,IAAIf,EAAKX,GAChBgB,QAAQC,IAAI,OAAQS,KACfA,EAEE,IAAI3B,EAAAA,QAAUC,GAErB0B,EAAKE,YAAcjB,EAEnBe,EAAKjB,OAAS,WACZ,OAAOR,KAAK2B,YAAY5B,KAGrB0B,EAsDQG,CAAgBN,EAAMlB,IAAKkB,EAAMjB,OAI9C,OAFAI,EAAkBC,EAAMY,EAAMjB,OAEvBK,EAAKC,KAGd,MAAAP,IAAQA,EAAFC,MAAOA,EAAPC,UAAcA,GAAcgB,EAC5BO,EAAMN,SAASO,cAAc1B,GASnC,GAPIC,GACF0B,OAAOC,KAAK3B,GAAO4B,SAAQC,IACzB,MAAMC,EAAQ9B,EAAM6B,aAkBHL,EAAKK,EAAKC,GAEnB,cAARD,IACFA,EAAM,SAIR,GAAA,QAAYE,KAAKF,GAEfL,EADAK,EAAMA,EAAIG,eACCF,GAAS,QACf,GAAY,UAARD,EACT,GAAKC,GAA0B,iBAAVA,GAEd,GAAIA,GAA0B,iBAAVA,EACzB,IAAI,IAAIG,KAAKH,EACa,iBAAbA,EAAMG,GACfT,EAAIU,MAAMD,GAAKH,EAAMG,GAAK,KAE1BT,EAAIU,MAAMD,GAAKH,EAAMG,QANzBT,EAAIU,MAAMC,QAAUL,GAAS,QAW3BD,KAAOL,IACTA,EAAIK,GAAOC,GAAS,IAGlBA,EACFN,EAAIY,aAAaP,EAAKC,GAEtBN,EAAIa,gBAAgBR,GA/CpBO,CAAaZ,EAAKK,EAAKC,MAIvB7B,GAAWqC,OAAS,EACtB,IAAK,IAAIC,KAAQtC,EACfE,EAAOoC,EAAMf,GAGjB,OAAOA,WAGArB,EAAQc,EAAOuB,GACtB,OAAOA,EAAUC,YAAY7B,EAAQK,IAuCxBf,EAAAA,QAAAA,0DC5IbwC,EADF5C,QAAA2B,cAAA,MAAA,CACOkB,UAAU,SAAf,MAEED,EAAA5C,QAAA2B,cAAA,OAAA,KAAA,cAYEmB,UAAcC,EAAAA,QAAMpD,sBACXC,GACXoD,MAAOpD,GAKTa,qBACEG,QAAQC,IAAI,UAGdH,0BAA2Bd,GACzBgB,QAAQC,IAAI,SAGdE,sBACEH,QAAQC,IAAI,UAGdG,qBACEJ,QAAQC,IAAI,UAGdI,oBACEL,QAAQC,IAAI,UAGdR,SACE,OACEuC,EADF5C,QAAA2B,cAAA,MAAA,CACOkB,UAAU,SACbD,EAAA5C,QAAA2B,cAAA,OAAA,KAAA,YAMR,MAAMsB,EAAML,EAAA5C,QAAA2B,cAACuB,EAAb,CAAmBC,KAAM,WAEzBvC,QAAQC,IAAIoC,EAAIhD","sources":["react/component.js","react/index.js","react-dom/index.js","index.js"],"sourcesContent":["class Component {\r\n  constructor (props = {}) {\r\n    this.props = props;\r\n    this.state = {}\r\n  }\r\n}\r\n\r\nexport default Component","import Component from './component'\r\n\r\nfunction createElement (tag, attrs, ...childrens) {\r\n  return {\r\n    tag,\r\n    attrs,\r\n    childrens\r\n  }\r\n}\r\n\r\nexport default {\r\n  createElement,\r\n  Component\r\n}","import Component from '../react/component'\r\n\r\nconst ReactDOM = {\r\n  render\r\n}\r\n\r\n// 创建自定义组件\r\n// vnode.tag, vnode.attrs\r\nfunction createComponent (comp, props) {\r\n  let inst\r\n  // 原型链非空，还有render方法，那么一定是类组件\r\n  if (comp.prototype && comp.prototype.render) {\r\n    console.log(\"props\", props)\r\n    inst = new comp(props)\r\n    console.log(\"inst\" ,inst)\r\n  } else {\r\n    // 如果不是类组件，我们就也是用类组件创建\r\n    inst = new Component(props)\r\n    // 将构造函数赋值，函数组件原来的tag就是函数本身，因此用于构造函数十分切合\r\n    inst.constructor = comp\r\n    // 每一个类组件都有一个render方法，对该render进行赋值给其他函数，并且是返回一个构造函数内部的jsx\r\n    inst.render = function () {\r\n      return this.constructor(props)\r\n    }\r\n  }\r\n  return inst\r\n}\r\n\r\n// 这是为了给comp内部添加base对象而设置的函数\r\nfunction renderComponent (comp) {\r\n  // 定义组件内部的节点对象\r\n  let base\r\n\r\n  // 拿到了元素\r\n  const renderer = comp.render()\r\n\r\n  console.log(renderer)\r\n\r\n  // renderer是获取了类组件内部的元素，但还是需要一层_render()函数解析，不然还是无法解析\r\n  base = _render(renderer)\r\n\r\n  if (comp.base) {\r\n    if (comp.componentWillUpdate) {\r\n      comp.componentWillUpdate()\r\n    }\r\n    if (comp.componentDidUpdate) {\r\n      comp.componentDidUpdate()\r\n    }\r\n  } else if (comp.componentDidMount) {\r\n    comp.componentDidMount()\r\n  }\r\n\r\n  comp.base = base\r\n}\r\n\r\nfunction setComponentProps (comp, props) {\r\n  if (!comp.base) {\r\n    if (comp.componentWillMount) {\r\n      comp.componentWillMount()\r\n    } else if (comp.componentWillReceiveProps) {\r\n      comp.componentWillReceiveProps()\r\n    }\r\n  }\r\n  // 设置组件的属性\r\n  comp.props = props\r\n  // 渲染组件\r\n  renderComponent(comp)\r\n}\r\n\r\nfunction _render (vnode) {\r\n  if (vnode === undefined || vnode === null || typeof vnode === 'boolean') vnode = ''\r\n  if (typeof vnode === 'string') {\r\n    return document.createTextNode(vnode)\r\n  }\r\n\r\n  // 判断是否为函数组件或类组件【根据tag，也就是当前组件来分析】\r\n  // 必须在render下才能将attrs变成props\r\n  if (typeof vnode.tag === 'function') {\r\n    // 1.创建组件\r\n    const comp = createComponent(vnode.tag, vnode.attrs)\r\n    // 2.设置组件的属性，在这里，所有的属性都在这里变成了props\r\n    setComponentProps(comp, vnode.attrs)\r\n    // 3.组件渲染的节点对象返回\r\n    return comp.base\r\n  }\r\n\r\n  const { tag, attrs, childrens } = vnode\r\n  const dom = document.createElement(tag)\r\n\r\n  if (attrs) {\r\n    Object.keys(attrs).forEach(key => {\r\n      const value = attrs[key]\r\n      setAttribute(dom, key, value)\r\n    })\r\n  }\r\n\r\n  if (childrens?.length > 0) {\r\n    for (let item of childrens) {\r\n      render(item, dom)\r\n    }\r\n  }\r\n  return dom\r\n}\r\n\r\nfunction render (vnode, container) {\r\n  return container.appendChild(_render(vnode))\r\n}\r\n\r\n// 设置属性【value为key对应的键值】\r\nfunction setAttribute (dom, key, value) {\r\n  // 将属性名的className转换成class\r\n  if (key === 'className') {\r\n    key = 'class'\r\n  }\r\n\r\n  // 转换事件\r\n  if (/on\\w+/.test(key)) {\r\n    key = key.toLowerCase()\r\n    dom[key] = value || ''\r\n  } else if (key === 'style') {\r\n    if (!value || typeof value === 'string') {\r\n      dom.style.cssText = value || '' \r\n    } else if (value && typeof value === 'object') {\r\n      for(let k in value) {\r\n        if (typeof value[k] === 'number') {\r\n          dom.style[k] = value[k] + 'px'\r\n        } else {\r\n          dom.style[k] = value[k]\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    if (key in dom) {\r\n      dom[key] = value || ''\r\n    }\r\n\r\n    if (value) {\r\n      dom.setAttribute(key, value)\r\n    } else {\r\n      dom.removeAttribute(key)\r\n    }\r\n  }\r\n}\r\n\r\nexport default ReactDOM","import React from './react/index'\r\nimport ReactDOM from './react-dom/index'\r\n\r\nconst element = (\r\n  <div className=\"attrs\">\r\n    123\r\n    <span>456</span>\r\n  </div>\r\n)\r\n\r\nfunction Home () {\r\n  return (\r\n    <div className=\"hello\">\r\n      <span>123</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Home_ extends React.Component{\r\n  constructor (props) {\r\n    super (props)\r\n  }\r\n\r\n  // 生命周期函数，我个人觉得我们需要在Component内部进行构建\r\n\r\n  componentWillMount () {\r\n    console.log(\"组件开始加载\")\r\n  }\r\n\r\n  componentWillReceiveProps (props) {\r\n    console.log('props')\r\n  }\r\n\r\n  componentWillUpdate () {\r\n    console.log(\"组件将要更新\")\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    console.log(\"组件已经更新\")\r\n  }\r\n\r\n  componentDidMount () {\r\n    console.log(\"组件加载完成\")\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"hello\">\r\n        <span>123456</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst ele = <Home_ name={\"123123\"}/>\r\n// console.log(ele.tag)\r\nconsole.log(ele.tag)\r\n// console.log(<Home />)\r\n\r\n// console.log(element)\r\n\r\n// const ele = 1\r\n\r\n// ReactDOM.render(ele, document.querySelector('#root'))\r\n\r\n// let element = 'str'\r\n// console.log(element);\r\n\r\n// ReactDOM.render(<Home_ name={'act'}/>, document.getElementById('root'))\r\n\r\n// console.log(ele)"],"names":["Component","props","this","state","$d9babb7323c18b36$exports","default","tag","attrs","childrens","ReactDOM","render","setComponentProps","comp","base","componentWillMount","componentWillReceiveProps","renderer","console","log","_render","componentWillUpdate","componentDidUpdate","componentDidMount","renderComponent","vnode","document","createTextNode","inst","prototype","constructor","createComponent","dom","createElement","Object","keys","forEach","key","value","test","toLowerCase","k","style","cssText","setAttribute","removeAttribute","length","item","container","appendChild","$a501d8345a242c58$var$_index2","className","Home_","React","super","ele","$a501d8345a242c58$var$Home_","name"],"version":3,"file":"index.75920485.js.map"}