{"mappings":"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","sources":["react-dom/index.js","react/component.js","react/index.js","index.js"],"sourcesContent":["import Component from '../react/component'\r\n\r\nconst ReactDOM = {\r\n  render\r\n}\r\n\r\n// 创建自定义组件\r\n// vnode.tag, vnode.attrs\r\nfunction createComponent (comp, props) {\r\n  let inst\r\n  // 原型链非空，还有render方法，那么一定是类组件\r\n  if (comp.prototype && comp.prototype.render) {\r\n    console.log(\"props\", props)\r\n    inst = new comp(props)\r\n    console.log(\"inst\" ,inst)\r\n  } else {\r\n    // 如果不是类组件，我们就也是用类组件创建\r\n    inst = new Component(props)\r\n    // 将构造函数赋值，函数组件原来的tag就是函数本身，因此用于构造函数十分切合\r\n    inst.constructor = comp\r\n    // 每一个类组件都有一个render方法，对该render进行赋值给其他函数，并且是返回一个构造函数内部的jsx\r\n    inst.render = function () {\r\n      return this.constructor(props)\r\n    }\r\n  }\r\n  return inst\r\n}\r\n\r\n// 这是为了给comp内部添加base对象而设置的函数\r\n// 组件更新可以设置生命周期\r\nexport function renderComponent (comp) {\r\n  // 定义组件内部的节点对象\r\n  let base\r\n\r\n  // 拿到了元素\r\n  const renderer = comp.render()\r\n  // console.log(renderer)\r\n\r\n  // renderer是获取了类组件内部的元素，但还是需要一层_render()函数解析，不然还是无法解析\r\n  base = _render(renderer)\r\n\r\n  if (comp.base) {\r\n    if (comp.componentWillUpdate) {\r\n      comp.componentWillUpdate()\r\n    }\r\n    if (comp.componentDidUpdate) {\r\n      comp.componentDidUpdate()\r\n    }\r\n  } else if (comp.componentDidMount) {\r\n    comp.componentDidMount()\r\n  }\r\n\r\n  if (comp.base && comp.base.parentNode) {\r\n    // replaceChild是只能用于子组件，因此我们必须使用parentNode\r\n    // 将base赋值给comp.base\r\n    comp.base.parentNode.replaceChild(base, comp.base)\r\n  }\r\n  comp.base = base\r\n}\r\n\r\nfunction setComponentProps (comp, props) {\r\n  if (!comp.base) {\r\n    if (comp.componentWillMount) {\r\n      comp.componentWillMount()\r\n    } else if (comp.componentWillReceiveProps) {\r\n      comp.componentWillReceiveProps(props)\r\n    }\r\n  }\r\n  // 设置组件的属性\r\n  comp.props = props\r\n  // 渲染组件\r\n  renderComponent(comp)\r\n}\r\n\r\nfunction _render (vnode) {\r\n  if (vnode === undefined || vnode === null || typeof vnode === 'boolean') vnode = ''\r\n  if (typeof vnode === 'number') {\r\n    vnode = String(vnode)\r\n  }\r\n  if (typeof vnode === 'string') {\r\n    return document.createTextNode(vnode)\r\n  }\r\n\r\n  // 判断是否为函数组件或类组件【根据tag，也就是当前组件来分析】\r\n  // 必须在render下才能将attrs变成props\r\n  if (typeof vnode.tag === 'function') {\r\n    // 1.创建组件\r\n    const comp = createComponent(vnode.tag, vnode.attrs)\r\n    // 2.设置组件的属性，在这里，所有的属性都在这里变成了props\r\n    setComponentProps(comp, vnode.attrs)\r\n    // 3.组件渲染的节点对象返回\r\n    return comp.base\r\n  }\r\n\r\n  const { tag, attrs, childrens } = vnode\r\n  const dom = document.createElement(tag)\r\n\r\n  if (attrs) {\r\n    Object.keys(attrs).forEach(key => {\r\n      const value = attrs[key]\r\n      setAttribute(dom, key, value)\r\n    })\r\n  }\r\n\r\n  if (childrens?.length > 0) {\r\n    for (let item of childrens) {\r\n      render(item, dom)\r\n    }\r\n  }\r\n  return dom\r\n}\r\n\r\nfunction render (vnode, container) {\r\n  return container.appendChild(_render(vnode))\r\n}\r\n\r\n// 设置属性【value为key对应的键值】\r\nfunction setAttribute (dom, key, value) {\r\n  // 将属性名的className转换成class\r\n  if (key === 'className') {\r\n    key = 'class'\r\n  }\r\n\r\n  // 转换事件\r\n  if (/on\\w+/.test(key)) {\r\n    key = key.toLowerCase()\r\n    dom[key] = value || ''\r\n  } else if (key === 'style') {\r\n    if (!value || typeof value === 'string') {\r\n      dom.style.cssText = value || '' \r\n    } else if (value && typeof value === 'object') {\r\n      for(let k in value) {\r\n        if (typeof value[k] === 'number') {\r\n          dom.style[k] = value[k] + 'px'\r\n        } else {\r\n          dom.style[k] = value[k]\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    if (key in dom) {\r\n      dom[key] = value || ''\r\n    }\r\n\r\n    if (value) {\r\n      dom.setAttribute(key, value)\r\n    } else {\r\n      dom.removeAttribute(key)\r\n    }\r\n  }\r\n}\r\n\r\nexport default ReactDOM","import { renderComponent } from '../react-dom/index'\r\n\r\nclass Component {\r\n  constructor (props = {}) {\r\n    this.props = props;\r\n    this.state = {}\r\n  }\r\n\r\n  setState (stateChange) {\r\n    // 浅拷贝，将stateChange浅拷贝给this.state\r\n    Object.assign(this.state, stateChange)\r\n    // 数据改变实时渲染\r\n    renderComponent(this)\r\n  }\r\n}\r\n\r\nexport default Component","import Component from './component'\r\n\r\nfunction createElement (tag, attrs, ...childrens) {\r\n  return {\r\n    tag,\r\n    attrs,\r\n    childrens\r\n  }\r\n}\r\n\r\nexport default {\r\n  createElement,\r\n  Component\r\n}","import React from './react/index'\r\nimport ReactDOM from './react-dom/index'\r\n\r\nconst element = (\r\n  <div className=\"attrs\">\r\n    123\r\n    <span>456</span>\r\n  </div>\r\n)\r\n\r\nfunction Home () {\r\n  return (\r\n    <div className=\"hello\">\r\n      <span>123</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Home_ extends React.Component{\r\n  constructor (props) {\r\n    super (props)\r\n    this.state = {\r\n      num: 0\r\n    }\r\n  }\r\n\r\n  // 生命周期函数，我个人觉得我们需要在Component内部进行构建\r\n\r\n  componentWillMount () {\r\n    console.log(\"组件开始加载\")\r\n  }\r\n\r\n  componentWillReceiveProps (props) {\r\n    console.log('props-加载')\r\n    console.log(props)\r\n  }\r\n\r\n  componentWillUpdate () {\r\n    console.log(\"组件将要更新\")\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    console.log(\"组件已经更新\")\r\n  }\r\n\r\n  componentDidMount () {\r\n    console.log(\"组件加载完成\")\r\n  }\r\n\r\n  click = () => {\r\n    this.setState({\r\n      num: this.state.num + 1\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"hello\">\r\n        <span>123456--{this.state.num}</span>\r\n        <button onClick={this.click.bind(this)}>+</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// const ele = <Home_ name={\"123123\"}/>\r\n// console.log(ele.tag)\r\n// console.log(ele.tag)\r\n// console.log(<Home />)\r\n\r\n// console.log(element)\r\n\r\n// const ele = 1\r\n\r\n// ReactDOM.render(ele, document.querySelector('#root'))\r\n\r\n// let element = 'str'\r\n// console.log(element);\r\n\r\nReactDOM.render(<Home_ name={'act'}/>, document.getElementById('root'))\r\n\r\n// console.log(ele)"],"names":["renderComponent","ReactDOM","render","$0c8f2de8a103a81b$var$renderComponent","comp","base","_render","componentWillUpdate","componentDidUpdate","componentDidMount","parentNode","replaceChild","vnode","String","document","createTextNode","tag","props","inst","prototype","console","log","Component","constructor","this","createComponent","attrs","componentWillMount","componentWillReceiveProps","setComponentProps","childrens","dom","createElement","Object","keys","forEach","key","value","test","toLowerCase","k","style","cssText","setAttribute","removeAttribute","length","item","container","appendChild","state","setState","stateChange","assign","$0c8f2de8a103a81b$exports","$d9babb7323c18b36$exports","default","$a501d8345a242c58$var$_index2","className","Home_","React","super","num","click","onClick","bind","$a501d8345a242c58$var$Home_","name","getElementById"],"version":3,"file":"index.8ef5dbdf.js.map"}