{"mappings":"0DAAA,IAAIA,EAAQ,wBAIYC,EAAKC,KAAUC,GACrC,MAAO,KACLF,QACAC,YACAC,KAIWH,EAAAA,QAAAA,mECZf,MAAMI,EAAW,iBAIRC,EAAQC,EAAOC,GACtB,QAAcC,IAAVF,EAAqB,OACzB,GAAqB,iBAAVA,EAAoB,CAC7B,MAAMG,EAAWC,SAASC,eAAeL,GAEzC,OAAOC,EAAUK,YAAYH,GAG/B,MAAAR,IAAQA,EAAFC,MAAOA,EAAPC,UAAcA,GAAcG,EAC5BO,EAAMH,SAASI,cAAcb,GAE/BC,GACFa,OAAOC,KAAKd,GAAOe,SAAQC,IACzB,MAAMC,EAAQjB,EAAMgB,aAcHL,EAAKK,EAAKC,GAEnB,cAARD,IACFA,EAAM,SAIR,GAAA,QAAYE,KAAKF,GAEfL,EADAK,EAAMA,EAAIG,eACCF,GAAS,QACf,GAAY,UAARD,EACT,GAAKC,GAA0B,iBAAVA,GAEd,GAAIA,GAA0B,iBAAVA,EACzB,IAAI,IAAIG,KAAKH,EACa,iBAAbA,EAAMG,GACfT,EAAIU,MAAMD,GAAKH,EAAMG,GAAK,KAE1BT,EAAIU,MAAMD,GAAKH,EAAMG,QANzBT,EAAIU,MAAMC,QAAUL,GAAS,QAW3BD,KAAOL,IACTA,EAAIK,GAAOC,GAAS,IAGlBA,EACFN,EAAIY,aAAaP,EAAKC,GAEtBN,EAAIa,gBAAgBR,GA3CpBO,CAAaZ,EAAKK,EAAKC,MAI3B,GAAIhB,GAAWwB,OAAS,EACtB,IAAK,IAAIC,KAAQzB,EACfE,EAAOuB,EAAMf,GAGjB,OAAON,EAAUK,YAAYC,KAuChBT,EAAAA,QAAAA,gEC/Df,MAAMyB,EACJC,EADFC,QAAAjB,cAAA,MAAA,CACOkB,UAAU,SAAf,MAEEF,EAAAC,QAAAjB,cAAA,OAAA,KAAA,QAIJmB,QAAQC,IAAIL,GASZzB,EAAAA,QAASC,OAAOwB,EAASnB,SAASyB,eAAe","sources":["react/index.js","react-dom/index.js","index.js"],"sourcesContent":["let React = {\r\n  createElement \r\n}\r\n\r\nfunction createElement (tag, attrs, ...childrens) {\r\n  return {\r\n    tag,\r\n    attrs,\r\n    childrens\r\n  }\r\n}\r\n\r\nexport default React","const ReactDOM = {\r\n  render\r\n}\r\n\r\nfunction render (vnode, container) {\r\n  if (vnode === undefined) return\r\n  if (typeof vnode === 'string') {\r\n    const textNode = document.createTextNode(vnode)\r\n    // console.log(textNode)\r\n    return container.appendChild(textNode)\r\n  }\r\n\r\n  const { tag, attrs, childrens } = vnode\r\n  const dom = document.createElement(tag)\r\n\r\n  if (attrs) {\r\n    Object.keys(attrs).forEach(key => {\r\n      const value = attrs[key]\r\n      setAttribute(dom, key, value)\r\n    })\r\n  }\r\n\r\n  if (childrens?.length > 0) {\r\n    for (let item of childrens) {\r\n      render(item, dom)\r\n    }\r\n  }\r\n  return container.appendChild(dom)\r\n}\r\n\r\n// 设置属性【value为key对应的键值】\r\nfunction setAttribute (dom, key, value) {\r\n  // 将属性名的className转换成class\r\n  if (key === 'className') {\r\n    key = 'class'\r\n  }\r\n\r\n  // 转换事件\r\n  if (/on\\w+/.test(key)) {\r\n    key = key.toLowerCase()\r\n    dom[key] = value || ''\r\n  } else if (key === 'style') {\r\n    if (!value || typeof value === 'string') {\r\n      dom.style.cssText = value || '' \r\n    } else if (value && typeof value === 'object') {\r\n      for(let k in value) {\r\n        if (typeof value[k] === 'number') {\r\n          dom.style[k] = value[k] + 'px'\r\n        } else {\r\n          dom.style[k] = value[k]\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    if (key in dom) {\r\n      dom[key] = value || ''\r\n    }\r\n\r\n    if (value) {\r\n      dom.setAttribute(key, value)\r\n    } else {\r\n      dom.removeAttribute(key)\r\n    }\r\n  }\r\n}\r\n\r\nexport default ReactDOM","import React from './react/index'\r\nimport ReactDOM from './react-dom/index'\r\n\r\nconst element = (\r\n  <div className=\"attrs\">\r\n    123\r\n    <span>456</span>\r\n  </div>\r\n)\r\n\r\nconsole.log(element)\r\n\r\n// const ele = 1\r\n\r\n// ReactDOM.render(ele, document.querySelector('#root'))\r\n\r\n// let element = 'str'\r\n// console.log(element);\r\n\r\nReactDOM.render(element, document.getElementById('root'))\r\n\r\n// console.log(ele)"],"names":["React","tag","attrs","childrens","ReactDOM","render","vnode","container","undefined","textNode","document","createTextNode","appendChild","dom","createElement","Object","keys","forEach","key","value","test","toLowerCase","k","style","cssText","setAttribute","removeAttribute","length","item","element","$a501d8345a242c58$var$_index2","default","className","console","log","getElementById"],"version":3,"file":"index.b78066bb.js.map"}